# name: deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.9"

#       - name: Install Dependencies
#         run: |
#           python -m venv venv
#           source venv/bin/activate
#           pip install -r requirements.txt

#       - name: Deploy Application to EC2
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}  #brain
#           EC2_USER: ubuntu
#           EC2_HOST: ${{ secrets.EC2_PUBLIC_IP }}
#         run: |
#           echo "$SSH_PRIVATE_KEY" > private_key.pem
#           chmod 600 private_key.pem
#           ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST <<EOF
#             cd ~/fastapi-book-project
#             git pull origin main
#             source venv/bin/activate
#             pip install -r requirements.txt
#             sudo systemctl restart fastapi
#             sudo systemctl restart nginx
#           EOF



# name: deploy

# on:
#   push:
#     branches:
#       - main  # Trigger deployment on push to main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.9"

#       - name: Install Dependencies
#         run: |
#           python -m venv venv
#           source venv/bin/activate
#           pip install -r requirements.txt

#       - name: Deploy to EC2
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
#           EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
#           DEPLOY_USER: ubuntu
#         run: |
#           echo "$SSH_PRIVATE_KEY" > private_key.pem
#           chmod 600 private_key.pem
#           ssh -o StrictHostKeyChecking=no -i private_key.pem $DEPLOY_USER@$EC2_PUBLIC_IP << 'EOF'
#             cd ~/fastapi-book-project
#             git pull origin main
#             source venv/bin/activate
#             uvicorn main:app --host 0.0.0.0 --port 8000 --reload &
#           EOF


name: deploy

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
          DEPLOY_USER: ubuntu
          PROJECT_DIR: ~/fastapi-book-project
          APP_COMMAND: "uvicorn main:app --host 0.0.0.0 --port 8000"
        run: |
          # Save the SSH private key and set permissions
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # SSH into the EC2 instance and deploy the application
          ssh -o StrictHostKeyChecking=no -i private_key.pem $DEPLOY_USER@$EC2_PUBLIC_IP << 'EOF'
            set -e  # Exit on error
            cd $PROJECT_DIR

            # Pull the latest changes
            git fetch origin
            git reset --hard origin/main

            # Set up the virtual environment if it doesn't exist
            if [ ! -d "venv" ]; then
              python -m venv venv
            fi

            # Activate the virtual environment and install dependencies
            source venv/bin/activate
            pip install -r requirements.txt

            # Restart the application using a process manager (e.g., systemd)
            sudo systemctl restart fastapi-app.service
          EOF